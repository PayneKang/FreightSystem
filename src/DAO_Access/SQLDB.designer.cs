#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO_Access
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FreightSystemDB")]
	public partial class SQLDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAccess(Access instance);
    partial void UpdateAccess(Access instance);
    partial void DeleteAccess(Access instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertTransportRecords(TransportRecords instance);
    partial void UpdateTransportRecords(TransportRecords instance);
    partial void DeleteTransportRecords(TransportRecords instance);
    #endregion
		
		public SQLDBDataContext() : 
				base(global::DAO_Access.Properties.Settings.Default.FreightSystemDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Access> Access
		{
			get
			{
				return this.GetTable<Access>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<TransportRecords> TransportRecords
		{
			get
			{
				return this.GetTable<TransportRecords>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Access")]
	public partial class Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessID;
		
		private bool _CanCreate;
		
		private bool _CanDelete;
		
		private bool _CanUpdate;
		
		private bool _CanQuery;
		
		private string _ModelName;
		
		private string _PropertyName;
		
		private int _RoleID;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessIDChanging(int value);
    partial void OnAccessIDChanged();
    partial void OnCanCreateChanging(bool value);
    partial void OnCanCreateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanUpdateChanging(bool value);
    partial void OnCanUpdateChanged();
    partial void OnCanQueryChanging(bool value);
    partial void OnCanQueryChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public Access()
		{
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccessID
		{
			get
			{
				return this._AccessID;
			}
			set
			{
				if ((this._AccessID != value))
				{
					this.OnAccessIDChanging(value);
					this.SendPropertyChanging();
					this._AccessID = value;
					this.SendPropertyChanged("AccessID");
					this.OnAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCreate", DbType="Bit NOT NULL")]
		public bool CanCreate
		{
			get
			{
				return this._CanCreate;
			}
			set
			{
				if ((this._CanCreate != value))
				{
					this.OnCanCreateChanging(value);
					this.SendPropertyChanging();
					this._CanCreate = value;
					this.SendPropertyChanged("CanCreate");
					this.OnCanCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUpdate", DbType="Bit NOT NULL")]
		public bool CanUpdate
		{
			get
			{
				return this._CanUpdate;
			}
			set
			{
				if ((this._CanUpdate != value))
				{
					this.OnCanUpdateChanging(value);
					this.SendPropertyChanging();
					this._CanUpdate = value;
					this.SendPropertyChanged("CanUpdate");
					this.OnCanUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanQuery", DbType="Bit NOT NULL")]
		public bool CanQuery
		{
			get
			{
				return this._CanQuery;
			}
			set
			{
				if ((this._CanQuery != value))
				{
					this.OnCanQueryChanging(value);
					this.SendPropertyChanging();
					this._CanQuery = value;
					this.SendPropertyChanged("CanQuery");
					this.OnCanQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Access", Storage="_Roles", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Access.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Access.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _Password;
		
		private System.DateTime _CreateDateTime;
		
		private int _RoleId;
		
		private string _Comment;
		
		private string _Location;
		
		private System.DateTime _LastLoginTime;
		
		private string _LastLoginIP;
		
		private string _Name;
		
		private EntitySet<TransportRecords> _TransportRecords;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreateDateTimeChanging(System.DateTime value);
    partial void OnCreateDateTimeChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLastLoginTimeChanging(System.DateTime value);
    partial void OnLastLoginTimeChanged();
    partial void OnLastLoginIPChanging(string value);
    partial void OnLastLoginIPChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Users()
		{
			this._TransportRecords = new EntitySet<TransportRecords>(new Action<TransportRecords>(this.attach_TransportRecords), new Action<TransportRecords>(this.detach_TransportRecords));
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIP", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastLoginIP
		{
			get
			{
				return this._LastLoginIP;
			}
			set
			{
				if ((this._LastLoginIP != value))
				{
					this.OnLastLoginIPChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIP = value;
					this.SendPropertyChanged("LastLoginIP");
					this.OnLastLoginIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_TransportRecords", Storage="_TransportRecords", ThisKey="UserID", OtherKey="CreatorUserID")]
		public EntitySet<TransportRecords> TransportRecords
		{
			get
			{
				return this._TransportRecords;
			}
			set
			{
				this._TransportRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Users", Storage="_Roles", ThisKey="RoleId", OtherKey="RoleID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleId = value.RoleID;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportRecords(TransportRecords entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_TransportRecords(TransportRecords entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private EntitySet<Access> _Access;
		
		private EntitySet<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Roles()
		{
			this._Access = new EntitySet<Access>(new Action<Access>(this.attach_Access), new Action<Access>(this.detach_Access));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(255)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Access", Storage="_Access", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<Access> Access
		{
			get
			{
				return this._Access;
			}
			set
			{
				this._Access.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Users", Storage="_Users", ThisKey="RoleID", OtherKey="RoleId")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Access(Access entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Access(Access entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportRecords")]
	public partial class TransportRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CarLicense;
		
		private string _ClientName;
		
		private System.DateTime _DeliverDate;
		
		private string _Driver;
		
		private string _FromLocation;
		
		private string _PackageName;
		
		private int _Quantity;
		
		private string _ToLocation;
		
		private double _Volume;
		
		private System.Nullable<double> _AccountPayble;
		
		private string _Comment;
		
		private string _CreatorUserID;
		
		private System.Nullable<double> _Deductions;
		
		private System.Nullable<double> _DeliverPrice;
		
		private string _DeliverType;
		
		private System.Nullable<double> _HandlingFee;
		
		private System.Nullable<System.DateTime> _PayDate;
		
		private System.Nullable<double> _PrePay;
		
		private System.Nullable<double> _Reparations;
		
		private System.Nullable<double> _ShortBargeFee;
		
		private string _Status;
		
		private string _TrayNo;
		
		private System.Nullable<double> _OilCard;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCarLicenseChanging(string value);
    partial void OnCarLicenseChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnDeliverDateChanging(System.DateTime value);
    partial void OnDeliverDateChanged();
    partial void OnDriverChanging(string value);
    partial void OnDriverChanged();
    partial void OnFromLocationChanging(string value);
    partial void OnFromLocationChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnToLocationChanging(string value);
    partial void OnToLocationChanged();
    partial void OnVolumeChanging(double value);
    partial void OnVolumeChanged();
    partial void OnAccountPaybleChanging(System.Nullable<double> value);
    partial void OnAccountPaybleChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatorUserIDChanging(string value);
    partial void OnCreatorUserIDChanged();
    partial void OnDeductionsChanging(System.Nullable<double> value);
    partial void OnDeductionsChanged();
    partial void OnDeliverPriceChanging(System.Nullable<double> value);
    partial void OnDeliverPriceChanged();
    partial void OnDeliverTypeChanging(string value);
    partial void OnDeliverTypeChanged();
    partial void OnHandlingFeeChanging(System.Nullable<double> value);
    partial void OnHandlingFeeChanged();
    partial void OnPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPayDateChanged();
    partial void OnPrePayChanging(System.Nullable<double> value);
    partial void OnPrePayChanged();
    partial void OnReparationsChanging(System.Nullable<double> value);
    partial void OnReparationsChanged();
    partial void OnShortBargeFeeChanging(System.Nullable<double> value);
    partial void OnShortBargeFeeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTrayNoChanging(string value);
    partial void OnTrayNoChanged();
    partial void OnOilCardChanging(System.Nullable<double> value);
    partial void OnOilCardChanged();
    #endregion
		
		public TransportRecords()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLicense", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CarLicense
		{
			get
			{
				return this._CarLicense;
			}
			set
			{
				if ((this._CarLicense != value))
				{
					this.OnCarLicenseChanging(value);
					this.SendPropertyChanging();
					this._CarLicense = value;
					this.SendPropertyChanged("CarLicense");
					this.OnCarLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliverDate
		{
			get
			{
				return this._DeliverDate;
			}
			set
			{
				if ((this._DeliverDate != value))
				{
					this.OnDeliverDateChanging(value);
					this.SendPropertyChanging();
					this._DeliverDate = value;
					this.SendPropertyChanged("DeliverDate");
					this.OnDeliverDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromLocation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FromLocation
		{
			get
			{
				return this._FromLocation;
			}
			set
			{
				if ((this._FromLocation != value))
				{
					this.OnFromLocationChanging(value);
					this.SendPropertyChanging();
					this._FromLocation = value;
					this.SendPropertyChanged("FromLocation");
					this.OnFromLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToLocation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ToLocation
		{
			get
			{
				return this._ToLocation;
			}
			set
			{
				if ((this._ToLocation != value))
				{
					this.OnToLocationChanging(value);
					this.SendPropertyChanging();
					this._ToLocation = value;
					this.SendPropertyChanged("ToLocation");
					this.OnToLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float NOT NULL")]
		public double Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPayble", DbType="Float")]
		public System.Nullable<double> AccountPayble
		{
			get
			{
				return this._AccountPayble;
			}
			set
			{
				if ((this._AccountPayble != value))
				{
					this.OnAccountPaybleChanging(value);
					this.SendPropertyChanging();
					this._AccountPayble = value;
					this.SendPropertyChanged("AccountPayble");
					this.OnAccountPaybleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deductions", DbType="Float")]
		public System.Nullable<double> Deductions
		{
			get
			{
				return this._Deductions;
			}
			set
			{
				if ((this._Deductions != value))
				{
					this.OnDeductionsChanging(value);
					this.SendPropertyChanging();
					this._Deductions = value;
					this.SendPropertyChanged("Deductions");
					this.OnDeductionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverPrice", DbType="Float")]
		public System.Nullable<double> DeliverPrice
		{
			get
			{
				return this._DeliverPrice;
			}
			set
			{
				if ((this._DeliverPrice != value))
				{
					this.OnDeliverPriceChanging(value);
					this.SendPropertyChanging();
					this._DeliverPrice = value;
					this.SendPropertyChanged("DeliverPrice");
					this.OnDeliverPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverType", DbType="NVarChar(255)")]
		public string DeliverType
		{
			get
			{
				return this._DeliverType;
			}
			set
			{
				if ((this._DeliverType != value))
				{
					this.OnDeliverTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliverType = value;
					this.SendPropertyChanged("DeliverType");
					this.OnDeliverTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingFee", DbType="Float")]
		public System.Nullable<double> HandlingFee
		{
			get
			{
				return this._HandlingFee;
			}
			set
			{
				if ((this._HandlingFee != value))
				{
					this.OnHandlingFeeChanging(value);
					this.SendPropertyChanging();
					this._HandlingFee = value;
					this.SendPropertyChanged("HandlingFee");
					this.OnHandlingFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrePay", DbType="Float")]
		public System.Nullable<double> PrePay
		{
			get
			{
				return this._PrePay;
			}
			set
			{
				if ((this._PrePay != value))
				{
					this.OnPrePayChanging(value);
					this.SendPropertyChanging();
					this._PrePay = value;
					this.SendPropertyChanged("PrePay");
					this.OnPrePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reparations", DbType="Float")]
		public System.Nullable<double> Reparations
		{
			get
			{
				return this._Reparations;
			}
			set
			{
				if ((this._Reparations != value))
				{
					this.OnReparationsChanging(value);
					this.SendPropertyChanging();
					this._Reparations = value;
					this.SendPropertyChanged("Reparations");
					this.OnReparationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortBargeFee", DbType="Float")]
		public System.Nullable<double> ShortBargeFee
		{
			get
			{
				return this._ShortBargeFee;
			}
			set
			{
				if ((this._ShortBargeFee != value))
				{
					this.OnShortBargeFeeChanging(value);
					this.SendPropertyChanging();
					this._ShortBargeFee = value;
					this.SendPropertyChanged("ShortBargeFee");
					this.OnShortBargeFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrayNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TrayNo
		{
			get
			{
				return this._TrayNo;
			}
			set
			{
				if ((this._TrayNo != value))
				{
					this.OnTrayNoChanging(value);
					this.SendPropertyChanging();
					this._TrayNo = value;
					this.SendPropertyChanged("TrayNo");
					this.OnTrayNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OilCard", DbType="Float")]
		public System.Nullable<double> OilCard
		{
			get
			{
				return this._OilCard;
			}
			set
			{
				if ((this._OilCard != value))
				{
					this.OnOilCardChanging(value);
					this.SendPropertyChanging();
					this._OilCard = value;
					this.SendPropertyChanged("OilCard");
					this.OnOilCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_TransportRecords", Storage="_Users", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.TransportRecords.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.TransportRecords.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(string);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
